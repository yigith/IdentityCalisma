@using Microsoft.AspNetCore.Identity
@using IdentityCalisma.Data
@using System.Security.Claims;
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@*@inject ApplicationDbContext Db*@
@{
    // yöntem 1: giriş yapmış bir kullanıcının bilgilerine nasıl erişiriz?
    var user = await UserManager.GetUserAsync(User);
    var id = UserManager.GetUserId(User);

    // yöntem 2
    //var userId = User.FindFirstValue(ClaimTypes.NameIdentifier);
    //var user = Db.Users.Find(userId);
}

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @user.FirstName @user.LastName!</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
    @if (User.IsInRole("admin"))
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Admin" asp-controller="Dashboard" asp-action="Index">Yönetim</a>
        </li>
    }
</ul>
